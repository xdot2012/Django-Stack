version: "3.1"

services:
  django: &django
    build: .
    restart: always
    container_name: django-server
    environment:
      - DJANGO_SETTINGS_MODULE=meuapp.settings #change django project name
    expose:
      - 8000
    volumes:
      - ./code:/code
    command: >
      sh -c "python manage.py migrate
      && python manage.py collectstatic --noinput
      && gunicorn meuapp.wsgi:application -w 3 -b :8000"  #change django project name
    networks:
      - web
      - database
#    depends_on:
      # - mariadb
      # - postgres

  nginx:
    image: nginx
    container_name: nginx-server
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./etc/nginx:/etc/nginx/conf.d/
      - ./log/nginx:/var/log/nginx
      - ./code/media:/var/www/media
      - ./code/static:/var/www/static
#      - ./var/letsencrypt:/var/letsencrypt
#      - /etc/letsencrypt:/etc/letsencrypt # comentar se n√£o for utilizar o letsencrypt
    networks:
      - web
    depends_on:
      - django

  # mariadb:
  #   image: mariadb
  #   container_name: mariadb-server
  #   restart: always
  #   expose:
  #     - 3306
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: proj  # change django database name
  #   volumes:
  #     - mariadb-data:/var/lib/mysql
  #   networks:
  #     - database

#  postgres:
#    image: mdillon/postgis
#    container_name: postgres-server
#    restart: always
#    environment:
#      POSTGRES_PASSWORD: root
#      POSTGRES_DB: meu_app
#    expose:
#      - 5432
#    volumes:
#      - ./var/postgresql:/var/lib/postgresql/data
#    networks:
#      - web
#      - database

#  redis:
#    image: redis
#    container_name: redis-server
#    expose:
#      - 6379
#    networks:
#      - web
#      - database

#  celery:
#    build: .
#    container_name: celery-server
#    command: celery -A proj worker --beat --scheduler django_celery_beat.schedulers:DatabaseScheduler # change django celery app name
#    environment:
#      - DJANGO_SETTINGS_MODULE=proj.settings_production #change django project name
#    volumes:
#      - ./code:/code
#    depends_on:
#      - redis
#      - django
#    networks:
#      - web
#      - database


#  celery:
#    build: .
#    container_name: beat-server
#    command: celery -A proj beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler --pidfile=/opt/celeryd.pid # change django celery app name
#    environment:
#      - DJANGO_SETTINGS_MODULE=proj.settings_production #change django project name
#    volumes:
#      - ./code:/code
#    depends_on:
#      - redis
#      - django
#    networks:
#      - web
#      - database

#  flower:
#    build: .
#    container_name: flower-server
#    command: celery -A proj flower --basic_auth=admin:"admin" # change django celery app name
#    environment:
#      - DJANGO_SETTINGS_MODULE=proj.settings_production #change django project name
#    volumes:
#      - ./code:/code
#    depends_on:
#      - django
#      - celery
#    ports:
#      - 5555:5555
#    networks:
#      - web
#      - database

#  adminer:
#    image: adminer
#    container_name: adminer-server
#    restart: always
#    ports:
#      - 8080:8080
#    depends_on:
#      # - mariadb
#      - postgres
#    networks:
#      - database
#
#  portainer:
#    image: portainer/portainer
#    ports:
#      - "9000:9000"
#    command: -H unix:///var/run/docker.sock
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - portainer-data:/data

#  django-cron:
#      build: .
#      container_name: django-cron-server
#      entrypoint: ['sh', '/code/run-cron.sh']
#      volumes:
#        - ./code:/code
#        - ./etc/cron:/etc/cron.d/
#      depends_on:
#        - postgres
#      networks:
#        - web
#        - database


volumes:
  # mariadb-data:
  # postgres-data:
  portainer-data:

networks:
  web:
  database:
