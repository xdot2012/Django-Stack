version: 2.1

jobs:
  test:
    docker:
      - image: cimg/python:3.10.1
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            sudo apt-get update -y
            sudo apt-get -y install binutils libproj-dev gdal-bin libjpeg-dev zlib1g-dev rabbitmq-server
            pip install --upgrade pip ipython redis celery flower gunicorn
      - run:
          name: install development requirements
          command: |
            pip install -r code/requirements-dev.txt
      - run:
          name: install requirements
          command: |
            pip install -r code/requirements.txt
      - run:
          name: run tests
          command: python code/manage.py test
  build:
    docker:
      - image: cimg/aws:2023.07
    environment:
      ENV_FILE: code/meuapp/.env
      AWS_CONF_FOLDER: ~/.aws/
      AWS_CONF_FILE: ~/.aws/credentials
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.24
          docker_layer_caching: true
      - run:
          name: setup environment variables
          command: |
            echo USE_S3=$USE_S3 | cat >> $ENV_FILE
            echo AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID | cat >> $ENV_FILE
            echo AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY | cat >> $ENV_FILE
            echo AWS_STORAGE_BUCKET_NAME=$AWS_STORAGE_BUCKET_NAME | cat >> $ENV_FILE
      - run:
          name: configure aws cli
          command: |
            mkdir $AWS_CONF_FOLDER
            echo [default] | cat >> $ENV_FILE
            echo aws_access_key_id = $AWS_ACCESS_KEY_ID | cat >> $ENV_FILE
            echo aws_secret_access_key = $AWS_SECRET_ACCESS_KEY | cat >> $ENV_FILE
      - run:
          name: collect static files
          command: |
            python code/manage.py collectstatic --no-input
            aws s3 sync code/static/ s3://$AWS_STORAGE_BUCKET_NAME/static/
      - run:
          name: authenticate to dockerhub
          command: echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - run:
          name: build docker image
          command: docker build -t xdot2012/circle_ci_python:$CIRCLE_BRANCH .
      - run:
          name: push docker image
          command: docker push xdot2012/circle_ci_python:$CIRCLE_BRANCH

workflows:
  build-workflow:
    jobs:
      - test
      - build:
          requires:
            - test
